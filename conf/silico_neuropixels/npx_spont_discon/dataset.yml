# purpose: simulate neuropixels recording in a disconnected cortical column

# note: we cannot change the name of the raw experiment, as BluePy reads the original name
dataeng:
    blueconfig: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/4_preprint_2023/raw/neuropixels/npx_384ch_hex01_rou04_pfr03_40Khz_2024_11_16_disconnected/3d803ad9-1e0d-4f7b-a892-5a28fca7a536/0/BlueConfig' # BlueConfig from which params are loaded. All are identical. 
    concatenated: ['npx_spont_discon/sims/2024_11_16_disconnected', 'npx_spont_discon/sims/2024_11_16_disconnected_campaign2', 'npx_spont_discon/sims/2024_11_24_disconnected_campaign3']
    campaign:
        output:
            spike_file_path: /gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/raw/spiketrains.pkl
            trace_file_path: /gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/raw/traces.pkl        

recording: 
    input: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/raw/traces.pkl'
    output: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/dataeng/recording/traces' # readable via spikeinterface

probe_wiring: 
    full:
        output: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/dataeng/recording/traces_noise_fitd_gain_fitd_adj10perc_less_int16'

# metadata for each experiment are stored in the code repository at assets/metadata/
metadata:
    atlas: '/gpfs/bbp.cscs.ch/project/proj85/home/laquitai/spikebias/assets/metadata/silico_neuropixels/npx_spont_discon/'
    filtered_cells: '/gpfs/bbp.cscs.ch/project/proj85/home/laquitai/spikebias/assets/metadata/silico_neuropixels/npx_spont_discon/filtered_cells.npy'
    cell_properties: '/gpfs/bbp.cscs.ch/project/proj85/home/laquitai/spikebias/assets/metadata/silico_neuropixels/npx_spont_discon/cell_properties.h5'

ground_truth:
    full:
        output: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/preprocessed/ground_truth'
    10m:
        output: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/preprocessed/ground_truth_10m'

nwb: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/nwb/npx_biophy_spont_discon.nwb'

probe_wiring_nwb: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/nwb/npx_biophy_spont_discon_fitted.nwb'

preprocessing:
    full:
        output:
            trace_file_path: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/preprocessed/trace_file_path_gain_fitd_adj10perc_less_noise_fitd_int16'
            spike_file_path: /gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/preprocessed/spiketrains.pkl'
    fitting: # there is a file for each layer (coming from the first campaign)
        # fitted
        fitted_noise: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/dataeng/0_silico/neuropixels_lfp_10m_384ch_hex0_40Khz_2023_10_18/be011315-9555-493e-a59c-27f42d1058ed/campaign/preprocessed/vers_04072024/missing_noise_'
        # tuned
        missing_noise_path: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/dataeng/0_silico/neuropixels_lfp_10m_384ch_hex0_40Khz_2023_10_18/be011315-9555-493e-a59c-27f42d1058ed/campaign/preprocessed/missing_noise_'

postprocessing: 
    waveform:
        ground_truth:    
            study: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/postpro/realism/spike/ground_truth/study'
            10m:
                study: '/gpfs/bbp.cscs.ch/project/proj85/laquitai/spikebias_paper/0_silico/npx_spont_discon/concatenated_campaigns/postpro/realism/spike/ground_truth/study_10m'