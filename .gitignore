# Swap files
**/*.swp

# Weights files
assets/validation/*.h5
assets/validation/output/
assets/validation/*.npy
# dataset
dataset.zip
dataset/00_raw/*
dataset/01_intermediate/*

# intermediate datasets  --------------------------
# - keep computed psds
!dataset/01_intermediate/psds/
!dataset/01_intermediate/psds/**
dataset/01_intermediate/psds/old/

# demo
notebooks/0_demo/demo_recording
notebooks/0_demo/demo_sorting
notebooks/0_demo/001250
dataset/03_demo/study_npx_evoked

#kilosort4
faiss

# to remove
.nfs3284e2262de35b4000000018

# temporary datasets
temp/*
tmp_dataset/*
!tmp_dataset/sorting_quality_evoked_1h.csv
!tmp_dataset/sorting_quality.csv

# python virtual environments 
envs/dandi/*
envs/demo/*
envs/spikebias/*
envs/spikesort_rtx5090/*
envs/kilosort4_rtx5090/*
envs/mearec/*
envs/mearec_to_dandi/*
envs/mearec_si_0_100_3/*
envs/mearec_si_0_103_0/*
envs/pca_manifold/*
envs/ground_truth/*


# logs
cluster/logs/*
chance_df.csv
igeom.pkl

# docker containers
assets/atlas/*
assets/containers/*
assets/containers/*
assets/neural_manifolds_replicaMFT_Cajal/*

# slurm logs
slurm*

led / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# spack
.spack-env
spack-stage
